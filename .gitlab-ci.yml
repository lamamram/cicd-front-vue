# image docker par défaut du pipeline => pour tous les jobs 
image: node:lts-buster-slim

# règles d'exécution du pipeline
workflow:
  # le pipeline ou le job se déclenche si au moins une règle est vraie
  # OU logique
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"
    # - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# liste des étapes d'exécution des jobs
stages:
  - installing deps
  - testing
  - building
  - deploying

variables:
  TRIGGER_CACHE: "off"

deps:
  stage: installing deps
  tags:
    - myusine
  script:
    - npm install
  # on upload "push" le dossier node_modules nouvellement créé dans gitlab
  # avant suppression du conteneur à la fin du job
  cache:
    key: cache npm
    paths:
      - node_modules/
    policy: push
  rules:
    # on régénère le cache uniquement si les dépendances on changé (package.json)
    - changes: 
        - package.json
      
    # procédure manuelle au cas où
    - if: $TRIGGER_CACHE == "on"

test:
  stage: testing
  tags:
    - myusine
  script:
    - npm test
  artifacts:
    expire_in: "1 hour"
    # on prélève les artefacts avec "paths" 
    # pour les proposer en téléchargement dans gitlab
    # et les rendre disponibles dans les jobs suivants
    # paths:
    #   - artifacts/
    # on utilise "reports" pour intégrer certains rapports
    # directement dans l'interface de gitlab
    reports:
      junit: artifacts/units.xml
      cobertura: coverage/cobertura-coverage.xml 
  # on installe "pull" le cache npm contenant node_modules/
  # dans le conteneur avant l'exécution des commandes npm
  cache:
    key: cache npm
    untracked: true
    policy: pull

# "." désactive un job
.build:
  stage: building
  tags:
    - myusine
  script:
    - npm run build
  rules:
    - if: $CI_COMMIT_BRANCH =~ /feature[0-9]+/
  artifacts:
    expire_in: "1 hour"
    paths:
      - dist/

lint:
  stage: building
  tags:
    - myusine
  script:
    - npm run lint
  cache:
    key: cache npm
    untracked: true
    policy: pull


deploy:
  stage: deploying
  tags:
    - myusine
  script:
    - echo "Deploy build in dist/"
  environment:
    name: prod
    url: https://dawan.fr
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
  cache:
    key: cache npm
    untracked: true
    policy: pull
